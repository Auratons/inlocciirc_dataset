function [ params ] = holoLens1Params(params)

    params.query.dir = fullfile(params.dataset.dir, 'query-HoloLens1');

    addpath('../functions/InLocCIIRC_utils/environment');
    env = environment();

    if strcmp(env, 'laptop')
        params.input.dir = '/Volumes/GoogleDrive/MÅ¯j disk/ARTwin/personal/lucivpav/HoloLens sequences';
    elseif strcmp(env, 'cmp')
        params.input.dir = '/mnt/datagrid/personal/lucivpav/HoloLens sequences';
    end

    params.measurement.path = fullfile(params.input.dir, 'measurement1.txt');
    params.input.recording.dir = fullfile(params.input.dir, 'HoloLensRecording__2020_04_23__09_53_01');
    params.input.query.dir = fullfile(params.input.recording.dir, 'pv');
    params.input.poses.path = fullfile(params.input.recording.dir, 'pv_locationData.csv');
    params.HoloLensPoses.dir = fullfile(params.query.dir, 'HoloLensPoses');
    params.HoloLensProjectedPointCloud.dir = fullfile(params.query.dir, 'HoloLensProjectedPointCloud');
    params.HoloLensTranslationDelay = 5; % in frames, w.r.t. reference poses
    params.HoloLensOrientationDelay = 4; % in frames, w.r.t. reference poses

    % NOTE: some reference poses are wrong due to Vicon error, blacklist them
    params.blacklistedQueryInd = [103:109, 162, 179:188, 191:193, 286:288];

    interestingQueryInd = [1,2,3,4,5,6];
    optimalRotations = {[-3.9710, -6.9129, -5.9729], % this is optimal for query 1
                        [-7.4251, -4.6931, -6.1227], % this is optimal for query 2
                        [8.5521, -4.4069, -5.1620], % this is optimal for query 3
                        [-3.8957, -7.9055, -5.6751], % this is optimal for query 4
                        [-9.7614, -6.2460, -4.5019], % this is optimal for query 5
                        [6.9404, 2.3937, -7.8539]}; % this is optimal for query 6
    params.optimal.camera.rotation.wrt.marker = containers.Map(interestingQueryInd, optimalRotations);
    params.camera.rotation.wrt.marker = [-1.5934, -4.6284, -5.8814]; % this aims to be generic

    interestingQueryInd = [1,2,3,4,5,6];
    optimalTranslations = {[3.3329; 18.6535; -2.7907], % this is optimal for query 1
                           [2.5253; 23.3619; -6.7326], % this is optimal for query 2
                           [4.4718; 12.3656; -7.9350], % this is optimal for query 3
                           [-0.8836; 14.7499; -7.9943], % this is optimal for query 4
                           [4.7571; 9.3035; 3.0861], % this is optimal for query 5
                           [1.4008; 6.5436; -10.3680]}; % this is optimal for query 6
    params.optimal.camera.origin.relative.wrt.marker = containers.Map(interestingQueryInd, optimalTranslations);
    params.camera.origin.relative.wrt.marker = [2.6007; 14.1630; -5.4557]; % this aims to be generic
    params.camera.originConstant = 0.023;
    params.camera.origin.wrt.marker = params.camera.originConstant * params.camera.origin.relative.wrt.marker;
    params.camera.sensor.size = [756, 1344]; % height, width
    params.camera.fl = 1038; % in pixels
    params.HoloLensViconSyncConstant = 10.7 * 1000; % [ms]
    
    %% interesting queries and corresponding matches %%
    params.interestingQueries = ["00132321090555753820.jpg", ... % aka query 1 (1.jpg)
                                 "00132321090868821963.jpg", ... % aka query 2 (94.jpg)
                                 "00132321091341754646.jpg", ... % aka query 3 (237.jpg)
                                 "00132321091488297196.jpg", ... % aka query 4 (281.jpg)
                                 "00132321091068652686.jpg", ... % aka query 5 (155.jpg)
                                 "00132321091211864676.jpg"]; % aka query 6 (198.jpg)
                                    % TODO: 00132321091305119025.jpg
    % interestingPointsQuery{i} are 2D projections of points in interestingPointsPC{i}.
    % i is the i-th query in params.interestingQueries
    params.interestingPointsPC{1} = [-3.5444, 2.6774, -3.2116; ...
                                        -11.2066, 2.3874, 1.0484; ...
                                        -2.7544, 3.5366, 1.5284; ...
                                        -5.5544, 3.5336, -1.2016]';
    params.interestingPointsQuery{1} = [1046, 432; ...
                                        398, 502; ...
                                        228, 151; ...
                                        671, 330]';

    params.interestingPointsPC{2} = [-6.6944, 0.7574, -2.3250; ...
                                        -8.2644, 0.6513, -2.4816; ...
                                        -5.0944, 2.4974, -3.3415; ...
                                        -5.2344, 1.0874, -3.3414]';
    params.interestingPointsQuery{2} = [271, 286; ...
                                        166, 138; ...
                                        1105, 361; ...
                                        739, 652]';

    params.interestingPointsPC{3} = [7.3956, 2.6947, -3.2416; ...
                                        3.8756, 3.5295, -0.9016; ...
                                        3.9756, 0.7663, 2.5484; ...
                                        4.4656, 2.9874, -0.6228; ...
                                        1.2156, 0.8774, -2.9065; ...
                                        2.2856, 0.0017, 0.4184]';
    params.interestingPointsQuery{3} = [981, 269; ...
                                        758, 35; ...
                                        1098, 663; ...
                                        838, 133; ...
                                        250, 388; ...
                                        442, 664]';

    params.interestingPointsPC{4} = [-3.5344, 2.6774, -3.2205; ...
                                        -11.2077, 2.3874, 1.0384; ...
                                        -7.0966, 0.6574, 1.0484; ...
                                        -5.8644, 3.5374, -2.6916; ...
                                        -2.2544, 0.0000, 1.4684]';
    params.interestingPointsQuery{4} = [1113, 198; ...
                                        406, 250; ...
                                        375, 428; ...
                                        892, 113; ...
                                        193, 706]';

    params.interestingPointsPC{5} = [-8.2444, 1.1374, 8.2766; ...
                                        -10.6837, 3.5356, 5.2184; ...
                                        -7.2519, 1.1474, 4.9484; ...
                                        -7.0244, 0.9659, 6.5084; ...
                                        -8.4444, 3.5361, 8.2084; ...
                                        -7.9444, 3.2362, 8.6884]';
    params.interestingPointsQuery{5} = [152, 515; ...
                                        956, 42; ...
                                        661, 630; ...
                                        175, 646; ...
                                        198, 10; ...
                                        40, 61]';

    params.interestingPointsPC{6} = [0.8956, 3.5306, 6.4184; ...
                                        10.2356, 2.5374, -3.3136; ...
                                        0.8456, 0.0060, 3.2784; ...
                                        16.8462, 2.0574, 6.6484; ...
                                        3.3268, 3.5376, 4.5884]';
    params.interestingPointsQuery{6} = [1194, 64; ...
                                        309, 60; ...
                                        75, 429; ...
                                        894, 475; ...
                                        805, 78]';
end
